<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.dangol.dao.IMainDao">
	<!-- 지역별 가게 리스트 -->
	<select id="selectStoreByArea" parameterType="store" resultType="store">
		SELECT 
			ROWNUM AS rn
			,SNUM AS snum
			,SNAME AS sname
			,SADDRESS AS saddress
			,SDETAILADDR AS sdetailaddr
			,DANGOLCNT AS dancnt
		FROM (
			SELECT 
				ROWNUM 
				,S.SNUM
				,S.SNAME
				,S.SADDRESS
				,S.SDETAILADDR
				,(SELECT COUNT(*) FROM GRADES G WHERE G.SNUM = S.SNUM AND GLEVEL <![CDATA[<>]]> 0) AS dangolCnt
			FROM
				STORES S
			WHERE 
				S.SADDRESS LIKE '${saddress}%' 
			ORDER BY S.SNUM
		) 
		WHERE 
			ROWNUM BETWEEN #{offset} AND (#{offset}+#{storesPerPage}-1)
	</select>
	
	<!-- 지역별 가게 리스트 수 -->
	<select id="getStoreByAreaCount" parameterType="store" resultType="int"> 
		SELECT 
			COUNT(*) 
		FROM 
			STORES 
		WHERE 
			SADDRESS LIKE '${saddress}%' 
	</select>
	
	<!-- 총 지점수 -->
	<select id="selectTotalStores" resultType="int">
		SELECT COUNT(*) FROM STORES
	</select>
	
	<!-- 총 회원수 -->
	<select id="selectTotalMembers" resultType="int">
		SELECT COUNT(*) FROM MEMBERS WHERE MTYPE = 'user'
	</select>
	
	<!-- 총 후기수 -->
	<select id="selectTotalComments" resultType="int">
		SELECT COUNT(*) FROM COMMENTS
	</select>
	
	<!-- 지역명 정보 -->
	<select id="getAreaInfo" resultType="store">
		SELECT 
			ORD AS ord
			,AREANAME AS saddress
		FROM 
			AREA 
		ORDER BY ORD ASC
	</select>
	
	<!-- 지역명 상세 정보 -->
	<select id="getAreaInfoDetail" parameterType="store" resultType="store">
		SELECT 
			AREANUM AS areaNum
			,ORD AS ord
			,AREADNAME AS saddress
		FROM 
			AREA_D
		WHERE
			AREANUM = #{areaNum}
		ORDER BY ORD ASC
	</select>
	
	
	
	
	
	
	
	
	
	<select id="selectStoreMemberBySnum" resultType="int">
		select snum from 
		(select rownum as rn ,e.* from (select snum from grades where gcurrent = 'yes' and glevel != 0 group by snum order by count(snum) desc) e) 
		where rn = 1 
	</select>
	<!-- 내용검색 -->
	<select id="selectSearchStoreAll" parameterType="java.util.HashMap" resultType="store">
		select * from
		(select rownum as rn ,e.* from (select * from stores where sname like '%${keyword}%' order by sdate desc) e) 
		where rn between #{offset} and (#{offset}+#{storesPerPage}-1)
	</select>
	<select id="selectCommentMonth" resultType="int">
		select gnum from comments where dnum in (select dnum from details where gnum in (select gnum from grades where gcurrent='yes') and dcount > 0) 
	</select>
	<select id="selectStoreAll" resultType="store">
		select * from 
		(select rownum as rn ,e.* from (select * from Stores) e) 
		where rn=1
	</select>
	<select id="selectGradeBySnum" parameterType="int" resultType="grade">
		select * from grades where snum = #{snum} and gcurrent = 'yes'
	</select>
	<select id="selectDetailAllByGnum" parameterType="int" resultType="details">
		select * from details where gnum = #{gnum} and dcount > 0
	</select>
	<select id="selectCommentMonthByDnum" parameterType="int" resultType="comment">
		select * from comments where dnum = #{dnum} and extract(month from cdate) like extract(month from sysdate)
	</select>
	<select id="selectCommentYearByDnum" parameterType="int" resultType="comment">
		select * from comments where dnum = #{dnum} and extract(year from cdate) like extract(year from sysdate)
	</select>
	<select id="selectEventAll" resultType="event">
		select * from events order by eid desc
	</select>
	<select id="selectAdminMainTag" resultType="admin">
		select * from admins where atype='main1' or atype='main2' order by atype
	</select>
	<select id="selectAdminByAvlaue" parameterType="String" resultType="admin">
		select * from admins where atype='theme' and avalue=#{avalue}
	</select>
	<select id="getSearchStoreAllCount" parameterType="java.util.HashMap" resultType="int"> 
		select count(*) from stores where sname like '%${keyword}%'
	</select>
	
</mapper>